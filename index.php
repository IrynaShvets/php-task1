 <?php

    // 1. Створіть змінну $a і присвойте їй значення 3. 
    //  Виведіть значення цієї змінної на екран.

    //  $a = 3;
    //  echo $a;

    // 2. Створіть змінні $a=10 і $b=2. Виведіть на екран їхню суму, 
    //  різницю, добуток і частку (результат ділення).

    // $a=10;
    // $b=2;

    // echo $a + $b . '<br>';
    // echo $a - $b . '<br>';
    // echo $a * $b . '<br>';
    // echo $a / $b . '<br>';

    // 3. Створіть змінні $c=15 і $d=2. Підсумуйте їх, а результат присвойте змінній $result. 
    // Виведіть на екран значення змінної $result.

    // $c=15;
    // $d=2;
    // $result = $c + $d;
    // echo $result;

    // 4. Створіть змінні $a=10, $b=2 і $c=5. Виведіть на екран їхню суму.

    // $a=10;
    // $b=2;
    // $c=5;
    // echo $a + $b + $c;

    // 5. Створіть змінні $a=17 і $b=10. 
    // Відніміть від $a змінну $b і результат присвойте змінній $c. 
    // Потім створіть змінну $d, присвойте їй значення 7. Складіть змінні $c і $d, 
    // а результат запишіть у змінну $result. Виведіть на екран значення змінної $result.

    // $a=17;
    // $b=10;
    // $c = $a - $b;
    // $d = 7;
    // $result = $c + $d;
    // echo $result;

    // 6. Робота з рядками
    //  Створіть змінну $text і присвойте їй значення 'Привіт, Світ!'. 
    //  Виведіть значення цієї змінної на екран.

    // $text = 'Привіт, Світ!';
    // echo $text;

    // 7. Створіть змінні $text1='Привіт, ' і $text2='Світ!'. 
    // За допомогою цих змінних і операції додавання рядків виведіть 
    // на екран фразу 'Привіт, Мир!'.

    // $text1='Привіт, ';
    // $text2='Світ!';
    // echo $text1 . $text2;

    // 8. Створіть змінну $name і присвойте їй ваше ім'я. 
    // Виведіть на екран фразу 'Привіт, %Ім'я%!'. Замість %Ім'я% має стояти ваше ім'я.

    // $name = 'Ірина';
    // echo "Привіт, $name!";

    // 9. Створіть змінну $age і присвойте їй ваш вік. 
    // Виведіть на екран 'Мені %Вік% років!'.

    // $age = 38;
    // echo "Мені $age років!";

    // 10. Звернення до символів рядка
    //  Створіть змінну $text і присвойте їй значення 'abcde'. 
    //  Звертаючись до окремих символів цього рядка, 
    //  виведіть на екран символ 'a', символ 'c', символ 'e'.

    // $text = 'abcde';
    // echo $text[0] . $text[2] . $text[4];

    // 11. Дано довільний рядок, наприклад, 'abcde'. 
    // Поміняйте першу букву (тобто букву 'a') цього рядка на '!'.

    // $text = 'abcde';
    // $newtext = str_replace($text[0], '!', $text);
    // echo $newtext;

    // 12.? Створіть змінну $num і присвойте їй значення '12345'. 
    // Знайдіть суму цифр цього числа.

    // $num = '12345';
    // echo array_sum(str_split($num));

    // 13. Практика
    //  Напишіть скрипт, який рахує кількість секунд 
    //  у годині, у добі, у місяці.

    // $secondsInHour = 60 * 60;
    // echo $secondsInHour . '<br>';
    // $secondsInDay = 60 * 60 * 24;
    // echo $secondsInDay . '<br>';
    // $secondsInMounth = 60 * 60 * 24 * 30;
    // echo $secondsInMounth . '<br>';

    // 14. Створіть три змінні - година, хвилина, секунда. 
    // З їхньою допомогою виведіть поточний час у форматі 'година:хвилина:секунда'.

    // $hour = 'H';
    // $minute = 'i';
    // $second = 's';
    // print date("$hour:$minute:$second");

    // 15. Створіть змінну, присвойте їй число. 
    // Підведіть це число до квадрата (це означає, що потрібно помножити його саме на себе). 
    // Виведіть його на екран.

    // $num = 9;
    // echo pow($num, 2);

    // 16. Робота з присвоюванням і декрементами
    //  Переробіть цей код так, щоб у ньому використовувалися операції +=, -=, *=, /=. 
    //  Кількість рядків коду при цьому не повинна змінитися.

    // $var = 47;
    // $var += 7;
    // $var -= 18;
    // $var *=10;
    // $var /= 20;
    // echo $var;

    // 17. Переробіть цей код так, щоб у ньому використовувалася операція .=. 
    // Кількість рядків коду при цьому не повинна змінитися.

    // $text = 'Я';
    // $text .= ' хочу';
    // $text .= ' знати';
    // $text .= ' PHP!';
    // echo $text;

    // 18. Переробіть цей код так, щоб у ньому використовувалися операції ++ і --. 
    // Кількість рядків коду при цьому не повинна змінитися.

    // $var = 10;
    // $var ++;
    // $var ++;
    // $var --;
    // echo $var;

    // 19. Переробіть цей код так, щоб у ньому використовувалися операції ++, -- , +=, -=, *=, /=. 
    // Кількість рядків коду при цьому не повинна змінитися.

    // $var = 10;
    // $var += 7;
    // $var ++;
    // $var --;
    // $var += 12;
    // $var *= 7;
    // $var -= 15;
    // echo $var;

    // 20. Робота з масивами
    //  Створіть масив $arr=['a', 'b', 'c']. 
    //  Виведіть значення масиву на екран за допомогою функції var_dump().

    // $arr=['a', 'b', 'c'];
    // var_dump($arr);

    // 21. За допомогою масиву $arr з попереднього номера 
    // виведіть на екран вміст першого, другого і третього елементів.

    // $arr=['a', 'b', 'c'];
    // echo($arr[0]);
    // echo($arr[1]);
    // echo($arr[2]);

    // 22. Створіть масив $arr=['a', 'b', 'c', 'd'] і 
    // з його допомогою виведіть на екран рядок 'a+b, c+d'.

    // $arr=['a', 'b', 'c', 'd'];
    // echo $arr[0] . '+' . $arr[1] . ', ' . $arr[2] . '+' . $arr[3];

    // 23. Створіть масив $arr з елементами 2, 5, 3, 9. Помножте перший елемент масиву на другий, 
    // а третій елемент на четвертий. 
    // Результати складіть, присвойте змінній $result. 
    // Виведіть на екран значення цієї змінної.

    // $arr=[2, 5, 3, 9];
    // $result = $arr[0] * $arr[1] + $arr[2] * $arr[3];
    // echo $result;

    // 24. Заповніть масив $arr числами від 1 до 5. Не оголошуйте масив, 
    // а просто заповніть його присвоюванням $arr[] = нове значення.

    // $arr;
    // $arr[0] = 1;
    // $arr[1] = 2;
    // $arr[2] = 3;
    // $arr[3] = 4;
    // $arr[4] = 5;
    // var_dump($arr);

    // 25. Асоціативні масиви
    //  Створіть масив $arr. Виведіть на екран елемент із ключем 'c'.

    // $arr = ['a'=>1, 'b'=>2, 'c'=>3];
    // echo $arr['c'];

    // 26. Створіть масив $arr. Знайдіть суму елементів цього масиву.

    // $arr = ['a'=>1, 'b'=>2, 'c'=>3];

    // $sum = $arr['a'] + $arr['b'] + $arr['c'];
    // echo($sum)

    // 27. Створіть масив заробітних плат $arr. 
    // Виведіть на екран зарплату Петрика та Колі.

    // $arr = ['Коля'=>'1000$', 'Вася'=>'500$', 'Петя'=>'200$'];
    // echo $arr['Петя'];
    // echo $arr['Коля'];

    // 28. Створіть асоціативний масив днів тижня. Ключами в ньому мають слугувати 
    // номери днів від початку тижня (понеділок - повинен мати ключ 1, вівторок - 2 і т.д.). 
    // Виведіть на екран поточний день тижня.

    // $arr = [
    //     '1' => 'понеділок', 
    //     '2' => 'вівторок', 
    //     '3' => 'середа', 
    //     '4' => 'четвер',
    //     '5' => 'пятниця',
    //     '6' => 'субота',
    //     '7' => 'неділя'
    // ];
    // echo $arr[date('w')];

    // 29. Нехай тепер номер дня тижня зберігається у змінній $day, наприклад там лежить число 3. 
    // Виведіть день тижня, що відповідає значенню змінної $day.

    // $day = 3;
    // $arr = [
    //         '1' => 'понеділок', 
    //         '2' => 'вівторок', 
    //         '3' => 'середа', 
    //         '4' => 'четвер',
    //         '5' => 'пятниця',
    //         '6' => 'субота',
    //         '7' => 'неділя'
    //     ];
    // echo $arr[$day];

    // 30. Багатовимірні масиви
    //  Створіть багатовимірний масив $arr. З його 
    //  допомогою виведіть на екран слова 'joomla', 'drupal', 'зелений', 'червоний'.

    // $arr = [
    //   'cms'=>['joomla', 'wordpress', 'drupal'],
    //   'colors'=>['blue'=>'блакитний', 'red'=>'червоний', 'green'=>'зелений']
    // ];

    // echo $arr['cms'][0] . '<br>';
    // echo $arr['cms'][2] . '<br>';
    // echo $arr['colors']['green'] . '<br>';
    // echo $arr['colors']['red'] . '<br>';

    // 31. Створіть двовимірний масив. Перші два ключі - це 'ua' і 'en'. 
    // Нехай перший ключ містить елемент, що є масивом назв днів тижня російською, 
    // а другий - англійською. 
    // Виведіть за допомогою цього масиву понеділок російською 
    // та середу англійською (нехай понеділок - це перший день).

    // $arr = [
    //       'ua'=>['понеділок', 'вівторок', 'середа', 'четвер', 'пятниця', 'субота', 'неділя'],
    //       'en'=>['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    // ];

    // echo $arr['ua'][0] . '<br>';
    // echo $arr['en'][2] . '<br>';

    // 32. Нехай тепер у змінній $lang зберігається мова 
    // (вона приймає одне зі значень або 'ua', або 'en' - або те, або те), 
    // а у змінній $day - номер дня. Виведіть словом день тижня, 
    // що відповідає змінним $lang і $day. Тобто: якщо, наприклад, 
    // $lang = 'ru' і $day = 3 - то виведемо 'середу'.

    function getDayOfWeek($lang, $day)
    {
        $arr = [
            'ua' => ['1' => 'понеділок', '2' => 'вівторок', '3' => 'середа', '4' => 'четвер', '5' => 'пятниця', '6' => 'субота', '7' => 'неділя'],
            'en' => ['1' => 'Monday', '2' => 'Tuesday', '3' => 'Wednesday', '4' => 'Thursday', '5' => 'Friday', '6' => 'Saturday', '7' => 'Sunday']
        ];

        return $arr[$lang][$day];
    }

    print_r(getDayOfWeek('ua', 1) . '<br>');
    print_r(getDayOfWeek('en', 1) . '<br>');
    print_r(getDayOfWeek('ua', 3) . '<br>');
    print_r(getDayOfWeek('en', 3) . '<br>');


    ?>
 